{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "disperseNEON",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address payable[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "disperseToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Disperse.sol",
    "1": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Disperse.sol",
    "exportedSymbols": {
      "Disperse": [
        137
      ],
      "IERC20": [
        206
      ]
    },
    "id": 138,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:0"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 207,
        "src": "62:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Disperse",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 137,
        "linearizedBaseContracts": [
          137
        ],
        "name": "Disperse",
        "nameLocation": "107:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "271:350:0",
              "statements": [
                {
                  "assignments": [
                    16
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "288:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 80,
                      "src": "281:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$206",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 15,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 206,
                          "src": "281:6:0"
                        },
                        "referencedDeclaration": 206,
                        "src": "281:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$206",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 18,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "303:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$206",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$206",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 17,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "296:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$206_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "296:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$206",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "281:35:0"
                },
                {
                  "assignments": [
                    22
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "334:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 80,
                      "src": "326:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "326:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "342:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "326:17:0"
                },
                {
                  "body": {
                    "expression": {
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 36,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "401:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "baseExpression": {
                          "id": 37,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "410:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 39,
                        "indexExpression": {
                          "id": 38,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "417:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "410:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "401:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41,
                    "nodeType": "ExpressionStatement",
                    "src": "401:18:0"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "373:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 30,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "377:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                          "typeString": "address payable[] calldata"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "377:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "373:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42,
                  "initializationExpression": {
                    "assignments": [
                      26
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "366:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 42,
                        "src": "358:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 28,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "370:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "358:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "396:3:0",
                      "subExpression": {
                        "id": 33,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "396:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35,
                    "nodeType": "ExpressionStatement",
                    "src": "396:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "353:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "457:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "457:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 50,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "477:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Disperse_$137",
                                  "typeString": "contract Disperse"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Disperse_$137",
                                  "typeString": "contract Disperse"
                                }
                              ],
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "469:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "469:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "469:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 52,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "484:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 44,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "438:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$206",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 189,
                          "src": "438:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "438:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "430:61:0"
                },
                {
                  "body": {
                    "id": 78,
                    "nodeType": "Block",
                    "src": "550:65:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 70,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "579:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                                  "typeString": "address payable[] calldata"
                                }
                              },
                              "id": 72,
                              "indexExpression": {
                                "id": 71,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "590:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "579:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 73,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "594:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 75,
                              "indexExpression": {
                                "id": 74,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "601:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "594:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 67,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "564:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$206",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 160,
                            "src": "564:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "564:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "564:40:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "522:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 61,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "526:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                          "typeString": "address payable[] calldata"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "526:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "522:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79,
                  "initializationExpression": {
                    "assignments": [
                      57
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "515:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 79,
                        "src": "507:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "507:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 59,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "519:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "507:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "545:3:0",
                      "subExpression": {
                        "id": 64,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "545:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 66,
                    "nodeType": "ExpressionStatement",
                    "src": "545:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "502:113:0"
                }
              ]
            },
            "functionSelector": "c73a2d60",
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disperseToken",
            "nameLocation": "131:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "161:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "154:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$206",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 4,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 206,
                      "src": "154:6:0"
                    },
                    "referencedDeclaration": 206,
                    "src": "154:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$206",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "210:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "183:37:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "183:15:0",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 7,
                    "nodeType": "ArrayTypeName",
                    "src": "183:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "249:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "230:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "230:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10,
                    "nodeType": "ArrayTypeName",
                    "src": "230:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "144:117:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:0"
            },
            "scope": 137,
            "src": "122:499:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "740:281:0",
              "statements": [
                {
                  "body": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 108,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "842:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 110,
                          "indexExpression": {
                            "id": 109,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "849:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "842:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 103,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "818:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 105,
                              "indexExpression": {
                                "id": 104,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "829:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "818:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "810:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "810:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "810:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "810:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "810:42:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 112,
                    "nodeType": "ExpressionStatement",
                    "src": "810:42:0"
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 94,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "770:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 95,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "774:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "774:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "770:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 113,
                  "initializationExpression": {
                    "assignments": [
                      91
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "763:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "755:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 93,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "767:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "755:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "793:3:0",
                      "subExpression": {
                        "id": 98,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "793:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 100,
                    "nodeType": "ExpressionStatement",
                    "src": "793:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "750:102:0"
                },
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "870:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "862:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "862:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 121,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 118,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "888:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Disperse_$137",
                            "typeString": "contract Disperse"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Disperse_$137",
                            "typeString": "contract Disperse"
                          }
                        ],
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "880:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "880:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "880:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "862:39:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 122,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "964:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "974:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "964:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 134,
                  "nodeType": "IfStatement",
                  "src": "960:54:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 131,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1006:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 127,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "985:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "985:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "977:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 125,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "977:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "977:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "977:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 133,
                    "nodeType": "ExpressionStatement",
                    "src": "977:37:0"
                  }
                }
              ]
            },
            "functionSelector": "38be91bc",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disperseNEON",
            "nameLocation": "636:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "666:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "649:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "649:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 83,
                    "nodeType": "ArrayTypeName",
                    "src": "649:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "695:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "678:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 85,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "678:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 86,
                    "nodeType": "ArrayTypeName",
                    "src": "678:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:54:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:0:0"
            },
            "scope": 137,
            "src": "627:394:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 138,
        "src": "98:925:0",
        "usedErrors": []
      }
    ],
    "src": "37:987:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50610631806100206000396000f3fe6080604052600436106100295760003560e01c806338be91bc1461002e578063c73a2d6014610043575b600080fd5b61004161003c3660046103c5565b610063565b005b34801561004f57600080fd5b5061004161005e3660046104d3565b610129565b60005b82518110156100ed5782818151811061008157610081610556565b60200260200101516001600160a01b03166108fc8383815181106100a7576100a7610556565b60200260200101519081150290604051600060405180830381858888f193505050501580156100da573d6000803e3d6000fd5b50806100e581610582565b915050610066565b5047801561012457604051339082156108fc029083906000818181858888f19350505050158015610122573d6000803e3d6000fd5b505b505050565b846000805b8581101561016e5784848281811061014857610148610556565b905060200201358261015a919061059d565b91508061016681610582565b91505061012e565b506040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156101c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e691906105b5565b6101ef57600080fd5b60005b858110156102cd57826001600160a01b031663a9059cbb88888481811061021b5761021b610556565b905060200201602081019061023091906105de565b87878581811061024257610242610556565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba91906105b5565b50806102c581610582565b9150506101f2565b5050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610316576103166102d7565b604052919050565b600067ffffffffffffffff821115610338576103386102d7565b5060051b60200190565b6001600160a01b038116811461035757600080fd5b50565b600082601f83011261036b57600080fd5b8135602061038061037b8361031e565b6102ed565b82815260059290921b8401810191818101908684111561039f57600080fd5b8286015b848110156103ba57803583529183019183016103a3565b509695505050505050565b600080604083850312156103d857600080fd5b823567ffffffffffffffff808211156103f057600080fd5b818501915085601f83011261040457600080fd5b8135602061041461037b8361031e565b82815260059290921b8401810191818101908984111561043357600080fd5b948201945b8386101561045a57853561044b81610342565b82529482019490820190610438565b9650508601359250508082111561047057600080fd5b5061047d8582860161035a565b9150509250929050565b60008083601f84011261049957600080fd5b50813567ffffffffffffffff8111156104b157600080fd5b6020830191508360208260051b85010111156104cc57600080fd5b9250929050565b6000806000806000606086880312156104eb57600080fd5b85356104f681610342565b9450602086013567ffffffffffffffff8082111561051357600080fd5b61051f89838a01610487565b9096509450604088013591508082111561053857600080fd5b5061054588828901610487565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156105965761059661056c565b5060010190565b600082198211156105b0576105b061056c565b500190565b6000602082840312156105c757600080fd5b815180151581146105d757600080fd5b9392505050565b6000602082840312156105f057600080fd5b81356105d78161034256fea2646970667358221220ad0718c4a0583c85dc7982868dab80649cf2adf4e77880cb017c05087a67e63064736f6c634300080b0033",
  "bytecodeSha1": "682b8c7c97a30bea7b3f87fdf231eb1e74970534",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Disperse",
  "coverageMap": {
    "branches": {
      "0": {
        "Disperse.disperseNEON": {
          "8": [
            964,
            975,
            false
          ]
        },
        "Disperse.disperseToken": {
          "9": [
            438,
            490,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "Disperse.disperseNEON": {
          "0": [
            810,
            852
          ],
          "1": [
            793,
            796
          ],
          "2": [
            977,
            1014
          ]
        },
        "Disperse.disperseToken": {
          "3": [
            401,
            419
          ],
          "4": [
            396,
            399
          ],
          "5": [
            430,
            491
          ],
          "6": [
            564,
            604
          ],
          "7": [
            545,
            548
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "6080604052600436106100295760003560e01c806338be91bc1461002e578063c73a2d6014610043575b600080fd5b61004161003c3660046103c5565b610063565b005b34801561004f57600080fd5b5061004161005e3660046104d3565b610129565b60005b82518110156100ed5782818151811061008157610081610556565b60200260200101516001600160a01b03166108fc8383815181106100a7576100a7610556565b60200260200101519081150290604051600060405180830381858888f193505050501580156100da573d6000803e3d6000fd5b50806100e581610582565b915050610066565b5047801561012457604051339082156108fc029083906000818181858888f19350505050158015610122573d6000803e3d6000fd5b505b505050565b846000805b8581101561016e5784848281811061014857610148610556565b905060200201358261015a919061059d565b91508061016681610582565b91505061012e565b506040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156101c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e691906105b5565b6101ef57600080fd5b60005b858110156102cd57826001600160a01b031663a9059cbb88888481811061021b5761021b610556565b905060200201602081019061023091906105de565b87878581811061024257610242610556565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba91906105b5565b50806102c581610582565b9150506101f2565b5050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610316576103166102d7565b604052919050565b600067ffffffffffffffff821115610338576103386102d7565b5060051b60200190565b6001600160a01b038116811461035757600080fd5b50565b600082601f83011261036b57600080fd5b8135602061038061037b8361031e565b6102ed565b82815260059290921b8401810191818101908684111561039f57600080fd5b8286015b848110156103ba57803583529183019183016103a3565b509695505050505050565b600080604083850312156103d857600080fd5b823567ffffffffffffffff808211156103f057600080fd5b818501915085601f83011261040457600080fd5b8135602061041461037b8361031e565b82815260059290921b8401810191818101908984111561043357600080fd5b948201945b8386101561045a57853561044b81610342565b82529482019490820190610438565b9650508601359250508082111561047057600080fd5b5061047d8582860161035a565b9150509250929050565b60008083601f84011261049957600080fd5b50813567ffffffffffffffff8111156104b157600080fd5b6020830191508360208260051b85010111156104cc57600080fd5b9250929050565b6000806000806000606086880312156104eb57600080fd5b85356104f681610342565b9450602086013567ffffffffffffffff8082111561051357600080fd5b61051f89838a01610487565b9096509450604088013591508082111561053857600080fd5b5061054588828901610487565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156105965761059661056c565b5060010190565b600082198211156105b0576105b061056c565b500190565b6000602082840312156105c757600080fd5b815180151581146105d757600080fd5b9392505050565b6000602082840312156105f057600080fd5b81356105d78161034256fea2646970667358221220ad0718c4a0583c85dc7982868dab80649cf2adf4e77880cb017c05087a67e63064736f6c634300080b0033",
  "deployedSourceMap": "98:925:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;627:394;;;;;;:::i;:::-;;:::i;:::-;;122:499;;;;;;;;;;-1:-1:-1;122:499:0;;;;;:::i;:::-;;:::i;627:394::-;755:9;750:102;774:10;:17;770:1;:21;750:102;;;818:10;829:1;818:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;810:31:0;:42;842:6;849:1;842:9;;;;;;;;:::i;:::-;;;;;;;810:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;793:3:0;;;;:::i;:::-;;;;750:102;;;-1:-1:-1;880:21:0;964:11;;960:54;;977:37;;985:10;;977:37;;;;;1006:7;;977:37;;;;1006:7;985:10;977:37;;;;;;;;;;;;;;;;;;;;;960:54;740:281;627:394;;:::o;122:499::-;303:12;281;;353:66;373:21;;;353:66;;;410:6;;417:1;410:9;;;;;;;:::i;:::-;;;;;;;401:18;;;;;:::i;:::-;;-1:-1:-1;396:3:0;;;;:::i;:::-;;;;353:66;;;-1:-1:-1;438:52:0;;-1:-1:-1;;;438:52:0;;457:10;438:52;;;4745:34:2;477:4:0;4795:18:2;;;4788:43;4847:18;;;4840:34;;;-1:-1:-1;;;;;438:18:0;;;;;4680::2;;438:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;430:61;;;;;;507:9;502:113;522:21;;;502:113;;;564:5;-1:-1:-1;;;;;564:14:0;;579:10;;590:1;579:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;594:6;;601:1;594:9;;;;;;;:::i;:::-;564:40;;-1:-1:-1;;;;;;564:40:0;;;;;;;-1:-1:-1;;;;;5627:32:2;;;564:40:0;;;5609:51:2;594:9:0;;;;;;;5676:18:2;;;5669:34;-1:-1:-1;5582:18:2;;564:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;545:3:0;;;;:::i;:::-;;;;502:113;;;;271:350;;122:499;;;;;:::o;14:127:2:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:2;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:2:o;426:183::-;486:4;519:18;511:6;508:30;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:2;582:14;598:4;578:25;;426:183::o;614:131::-;-1:-1:-1;;;;;689:31:2;;679:42;;669:70;;735:1;732;725:12;669:70;614:131;:::o;750:662::-;804:5;857:3;850:4;842:6;838:17;834:27;824:55;;875:1;872;865:12;824:55;911:6;898:20;937:4;961:60;977:43;1017:2;977:43;:::i;:::-;961:60;:::i;:::-;1055:15;;;1141:1;1137:10;;;;1125:23;;1121:32;;;1086:12;;;;1165:15;;;1162:35;;;1193:1;1190;1183:12;1162:35;1229:2;1221:6;1217:15;1241:142;1257:6;1252:3;1249:15;1241:142;;;1323:17;;1311:30;;1361:12;;;;1274;;1241:142;;;-1:-1:-1;1401:5:2;750:662;-1:-1:-1;;;;;;750:662:2:o;1417:1215::-;1535:6;1543;1596:2;1584:9;1575:7;1571:23;1567:32;1564:52;;;1612:1;1609;1602:12;1564:52;1652:9;1639:23;1681:18;1722:2;1714:6;1711:14;1708:34;;;1738:1;1735;1728:12;1708:34;1776:6;1765:9;1761:22;1751:32;;1821:7;1814:4;1810:2;1806:13;1802:27;1792:55;;1843:1;1840;1833:12;1792:55;1879:2;1866:16;1901:4;1925:60;1941:43;1981:2;1941:43;:::i;1925:60::-;2019:15;;;2101:1;2097:10;;;;2089:19;;2085:28;;;2050:12;;;;2125:19;;;2122:39;;;2157:1;2154;2147:12;2122:39;2181:11;;;;2201:217;2217:6;2212:3;2209:15;2201:217;;;2297:3;2284:17;2314:31;2339:5;2314:31;:::i;:::-;2358:18;;2234:12;;;;2396;;;;2201:217;;;2437:5;-1:-1:-1;;2480:18:2;;2467:32;;-1:-1:-1;;2511:16:2;;;2508:36;;;2540:1;2537;2530:12;2508:36;;2563:63;2618:7;2607:8;2596:9;2592:24;2563:63;:::i;:::-;2553:73;;;1417:1215;;;;;:::o;2637:375::-;2708:8;2718:6;2772:3;2765:4;2757:6;2753:17;2749:27;2739:55;;2790:1;2787;2780:12;2739:55;-1:-1:-1;2813:20:2;;2856:18;2845:30;;2842:50;;;2888:1;2885;2878:12;2842:50;2925:4;2917:6;2913:17;2901:29;;2985:3;2978:4;2968:6;2965:1;2961:14;2953:6;2949:27;2945:38;2942:47;2939:67;;;3002:1;2999;2992:12;2939:67;2637:375;;;;;:::o;3017:946::-;3170:6;3178;3186;3194;3202;3255:2;3243:9;3234:7;3230:23;3226:32;3223:52;;;3271:1;3268;3261:12;3223:52;3310:9;3297:23;3329:31;3354:5;3329:31;:::i;:::-;3379:5;-1:-1:-1;3435:2:2;3420:18;;3407:32;3458:18;3488:14;;;3485:34;;;3515:1;3512;3505:12;3485:34;3554:78;3624:7;3615:6;3604:9;3600:22;3554:78;:::i;:::-;3651:8;;-1:-1:-1;3528:104:2;-1:-1:-1;3739:2:2;3724:18;;3711:32;;-1:-1:-1;3755:16:2;;;3752:36;;;3784:1;3781;3774:12;3752:36;;3823:80;3895:7;3884:8;3873:9;3869:24;3823:80;:::i;:::-;3017:946;;;;-1:-1:-1;3017:946:2;;-1:-1:-1;3922:8:2;;3797:106;3017:946;-1:-1:-1;;;3017:946:2:o;3968:127::-;4029:10;4024:3;4020:20;4017:1;4010:31;4060:4;4057:1;4050:15;4084:4;4081:1;4074:15;4100:127;4161:10;4156:3;4152:20;4149:1;4142:31;4192:4;4189:1;4182:15;4216:4;4213:1;4206:15;4232:135;4271:3;-1:-1:-1;;4292:17:2;;4289:43;;;4312:18;;:::i;:::-;-1:-1:-1;4359:1:2;4348:13;;4232:135::o;4372:128::-;4412:3;4443:1;4439:6;4436:1;4433:13;4430:39;;;4449:18;;:::i;:::-;-1:-1:-1;4485:9:2;;4372:128::o;4885:277::-;4952:6;5005:2;4993:9;4984:7;4980:23;4976:32;4973:52;;;5021:1;5018;5011:12;4973:52;5053:9;5047:16;5106:5;5099:13;5092:21;5085:5;5082:32;5072:60;;5128:1;5125;5118:12;5072:60;5151:5;4885:277;-1:-1:-1;;;4885:277:2:o;5167:255::-;5234:6;5287:2;5275:9;5266:7;5262:23;5258:32;5255:52;;;5303:1;5300;5293:12;5255:52;5342:9;5329:23;5361:31;5386:5;5361:31;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    98,
    1023
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38BE91BC EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xC73A2D60 EQ PUSH2 0x43 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41 PUSH2 0x3C CALLDATASIZE PUSH1 0x4 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xED JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x81 JUMPI PUSH2 0x81 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA7 JUMPI PUSH2 0xA7 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0xE5 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x66 JUMP JUMPDEST POP SELFBALANCE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x148 JUMPI PUSH2 0x148 PUSH2 0x556 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x166 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2CD JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x21B JUMPI PUSH2 0x21B PUSH2 0x556 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x5DE JUMP JUMPDEST DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x242 JUMPI PUSH2 0x242 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x5B5 JUMP JUMPDEST POP DUP1 PUSH2 0x2C5 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F2 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x316 JUMPI PUSH2 0x316 PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x338 JUMPI PUSH2 0x338 PUSH2 0x2D7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x380 PUSH2 0x37B DUP4 PUSH2 0x31E JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3BA JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3A3 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x414 PUSH2 0x37B DUP4 PUSH2 0x31E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x45A JUMPI DUP6 CALLDATALOAD PUSH2 0x44B DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x438 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47D DUP6 DUP3 DUP7 ADD PUSH2 0x35A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4F6 DUP2 PUSH2 0x342 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51F DUP10 DUP4 DUP11 ADD PUSH2 0x487 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x545 DUP9 DUP3 DUP10 ADD PUSH2 0x487 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x596 JUMPI PUSH2 0x596 PUSH2 0x56C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5B0 JUMPI PUSH2 0x5B0 PUSH2 0x56C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5D7 DUP2 PUSH2 0x342 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD SMOD XOR 0xC4 LOG0 PC EXTCODECOPY DUP6 0xDC PUSH26 0x82868DAB80649CF2ADF4E77880CB017C05087A67E63064736F6C PUSH4 0x4300080B STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        98,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29"
    },
    "12": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x38BE91BC"
    },
    "25": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E"
    },
    "29": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC73A2D60"
    },
    "36": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "40": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "44": {
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "45": {
      "first_revert": true,
      "fn": null,
      "offset": [
        98,
        1023
      ],
      "op": "REVERT",
      "path": "0"
    },
    "46": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "47": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "50": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C"
    },
    "53": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "54": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "56": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C5"
    },
    "59": {
      "fn": "Disperse.disperseNEON",
      "jump": "i",
      "offset": [
        627,
        1021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "60": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "61": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63"
    },
    "64": {
      "fn": "Disperse.disperseNEON",
      "jump": "i",
      "offset": [
        627,
        1021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "65": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "66": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "STOP",
      "path": "0"
    },
    "67": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "69": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "DUP1",
      "path": "0"
    },
    "70": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "71": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F"
    },
    "74": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "75": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "77": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "DUP1",
      "path": "0"
    },
    "78": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "REVERT",
      "path": "0"
    },
    "79": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "80": {
      "op": "POP"
    },
    "81": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "84": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E"
    },
    "87": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "88": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "90": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D3"
    },
    "93": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        122,
        621
      ],
      "op": "JUMP",
      "path": "0"
    },
    "94": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "95": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "98": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        122,
        621
      ],
      "op": "JUMP",
      "path": "0"
    },
    "99": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "100": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        755,
        764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "102": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        750,
        852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        774,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "104": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        774,
        791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "105": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        770,
        771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "106": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        770,
        791
      ],
      "op": "LT",
      "path": "0"
    },
    "107": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        750,
        852
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "108": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        750,
        852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "111": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        750,
        852
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        828
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 0
    },
    "113": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        829,
        830
      ],
      "op": "DUP2",
      "path": "0"
    },
    "114": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "115": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "116": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "117": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "LT",
      "path": "0"
    },
    "118": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81"
    },
    "121": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "122": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81"
    },
    "125": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "128": {
      "fn": "Disperse.disperseNEON",
      "jump": "i",
      "offset": [
        818,
        831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "129": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "130": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "132": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "MUL",
      "path": "0"
    },
    "133": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "135": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "ADD",
      "path": "0"
    },
    "136": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "ADD",
      "path": "0"
    },
    "137": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        818,
        831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        841
      ],
      "op": "AND",
      "path": "0"
    },
    "147": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "150": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        848
      ],
      "op": "DUP4",
      "path": "0"
    },
    "151": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        849,
        850
      ],
      "op": "DUP4",
      "path": "0"
    },
    "152": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "DUP2",
      "path": "0"
    },
    "153": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "154": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "DUP2",
      "path": "0"
    },
    "155": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "LT",
      "path": "0"
    },
    "156": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7"
    },
    "159": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "160": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7"
    },
    "163": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "166": {
      "fn": "Disperse.disperseNEON",
      "jump": "i",
      "offset": [
        842,
        851
      ],
      "op": "JUMP",
      "path": "0"
    },
    "167": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "168": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "170": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "MUL",
      "path": "0"
    },
    "171": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "173": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "ADD",
      "path": "0"
    },
    "174": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "ADD",
      "path": "0"
    },
    "175": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        842,
        851
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "176": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "177": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "178": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "179": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "MUL",
      "path": "0"
    },
    "180": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "181": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "183": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "184": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "186": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "188": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "189": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "190": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP4",
      "path": "0"
    },
    "191": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "SUB",
      "path": "0"
    },
    "192": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "193": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP6",
      "path": "0"
    },
    "194": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP9",
      "path": "0"
    },
    "195": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP9",
      "path": "0"
    },
    "196": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "CALL",
      "path": "0"
    },
    "197": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "198": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "POP",
      "path": "0"
    },
    "199": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "POP",
      "path": "0"
    },
    "200": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "POP",
      "path": "0"
    },
    "201": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "POP",
      "path": "0"
    },
    "202": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "203": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "204": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "205": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "208": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "209": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "210": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "212": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "DUP1",
      "path": "0"
    },
    "213": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "214": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "215": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "217": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "REVERT",
      "path": "0"
    },
    "218": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        810,
        852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "op": "POP"
    },
    "220": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "221": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "224": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "225": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x582"
    },
    "228": {
      "fn": "Disperse.disperseNEON",
      "jump": "i",
      "offset": [
        793,
        796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "229": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "231": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "POP",
      "path": "0"
    },
    "232": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        793,
        796
      ],
      "op": "POP",
      "path": "0"
    },
    "233": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        750,
        852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "236": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        750,
        852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "237": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        750,
        852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "op": "POP"
    },
    "239": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        880,
        901
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "240": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        964,
        975
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "branch": 8,
      "fn": "Disperse.disperseNEON",
      "offset": [
        964,
        975
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "242": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        960,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "245": {
      "branch": 8,
      "fn": "Disperse.disperseNEON",
      "offset": [
        960,
        1014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "246": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "248": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "249": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        985,
        995
      ],
      "op": "CALLER",
      "path": "0"
    },
    "250": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        985,
        995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "251": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "252": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "253": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "256": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "MUL",
      "path": "0"
    },
    "257": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "258": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        1006,
        1013
      ],
      "op": "DUP4",
      "path": "0"
    },
    "259": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        1006,
        1013
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "260": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "262": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "263": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "264": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "265": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        1006,
        1013
      ],
      "op": "DUP6",
      "path": "0"
    },
    "266": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        985,
        995
      ],
      "op": "DUP9",
      "path": "0"
    },
    "267": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "DUP9",
      "path": "0"
    },
    "268": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "CALL",
      "path": "0"
    },
    "269": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "270": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "POP",
      "path": "0"
    },
    "271": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "POP",
      "path": "0"
    },
    "272": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "POP",
      "path": "0"
    },
    "273": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "POP",
      "path": "0"
    },
    "274": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "275": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "276": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "277": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x122"
    },
    "280": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "281": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "282": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "284": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "285": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "286": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "287": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "289": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "REVERT",
      "path": "0"
    },
    "290": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "291": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        977,
        1014
      ],
      "op": "POP",
      "path": "0"
    },
    "292": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        960,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        740,
        1021
      ],
      "op": "POP",
      "path": "0"
    },
    "294": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "POP",
      "path": "0"
    },
    "295": {
      "fn": "Disperse.disperseNEON",
      "offset": [
        627,
        1021
      ],
      "op": "POP",
      "path": "0"
    },
    "296": {
      "fn": "Disperse.disperseNEON",
      "jump": "o",
      "offset": [
        627,
        1021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "fn": "Disperse.disperseToken",
      "offset": [
        303,
        315
      ],
      "op": "DUP5",
      "path": "0"
    },
    "299": {
      "fn": "Disperse.disperseToken",
      "offset": [
        281,
        293
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "301": {
      "fn": "Disperse.disperseToken",
      "offset": [
        281,
        293
      ],
      "op": "DUP1",
      "path": "0"
    },
    "302": {
      "fn": "Disperse.disperseToken",
      "offset": [
        353,
        419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "Disperse.disperseToken",
      "offset": [
        373,
        394
      ],
      "op": "DUP6",
      "path": "0"
    },
    "304": {
      "fn": "Disperse.disperseToken",
      "offset": [
        373,
        394
      ],
      "op": "DUP2",
      "path": "0"
    },
    "305": {
      "fn": "Disperse.disperseToken",
      "offset": [
        373,
        394
      ],
      "op": "LT",
      "path": "0"
    },
    "306": {
      "fn": "Disperse.disperseToken",
      "offset": [
        353,
        419
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "307": {
      "fn": "Disperse.disperseToken",
      "offset": [
        353,
        419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16E"
    },
    "310": {
      "fn": "Disperse.disperseToken",
      "offset": [
        353,
        419
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "311": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        416
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 3
    },
    "312": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        416
      ],
      "op": "DUP5",
      "path": "0"
    },
    "313": {
      "fn": "Disperse.disperseToken",
      "offset": [
        417,
        418
      ],
      "op": "DUP3",
      "path": "0"
    },
    "314": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "315": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "316": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "LT",
      "path": "0"
    },
    "317": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "320": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "321": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x148"
    },
    "324": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "327": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        410,
        419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "328": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "329": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "330": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "POP",
      "path": "0"
    },
    "331": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "333": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "MUL",
      "path": "0"
    },
    "334": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "ADD",
      "path": "0"
    },
    "335": {
      "fn": "Disperse.disperseToken",
      "offset": [
        410,
        419
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "336": {
      "fn": "Disperse.disperseToken",
      "offset": [
        401,
        419
      ],
      "op": "DUP3",
      "path": "0"
    },
    "337": {
      "fn": "Disperse.disperseToken",
      "offset": [
        401,
        419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "340": {
      "fn": "Disperse.disperseToken",
      "offset": [
        401,
        419
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "341": {
      "fn": "Disperse.disperseToken",
      "offset": [
        401,
        419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "342": {
      "fn": "Disperse.disperseToken",
      "offset": [
        401,
        419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59D"
    },
    "345": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        401,
        419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "346": {
      "fn": "Disperse.disperseToken",
      "offset": [
        401,
        419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "Disperse.disperseToken",
      "offset": [
        401,
        419
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 4
    },
    "350": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "353": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "354": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x582"
    },
    "357": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        396,
        399
      ],
      "op": "JUMP",
      "path": "0"
    },
    "358": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "360": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "POP",
      "path": "0"
    },
    "361": {
      "fn": "Disperse.disperseToken",
      "offset": [
        396,
        399
      ],
      "op": "POP",
      "path": "0"
    },
    "362": {
      "fn": "Disperse.disperseToken",
      "offset": [
        353,
        419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "365": {
      "fn": "Disperse.disperseToken",
      "offset": [
        353,
        419
      ],
      "op": "JUMP",
      "path": "0"
    },
    "366": {
      "fn": "Disperse.disperseToken",
      "offset": [
        353,
        419
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "367": {
      "op": "POP"
    },
    "368": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "370": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "371": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "378": {
      "op": "SHL"
    },
    "379": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "380": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "381": {
      "fn": "Disperse.disperseToken",
      "offset": [
        457,
        467
      ],
      "op": "CALLER",
      "path": "0"
    },
    "382": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "384": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP3",
      "path": "0"
    },
    "385": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "ADD",
      "path": "0"
    },
    "386": {
      "op": "MSTORE"
    },
    "387": {
      "fn": "Disperse.disperseToken",
      "offset": [
        477,
        481
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "390": {
      "op": "DUP3"
    },
    "391": {
      "op": "ADD"
    },
    "392": {
      "op": "MSTORE"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "395": {
      "op": "DUP2"
    },
    "396": {
      "op": "ADD"
    },
    "397": {
      "op": "DUP3"
    },
    "398": {
      "op": "SWAP1"
    },
    "399": {
      "op": "MSTORE"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        456
      ],
      "op": "DUP4",
      "path": "0"
    },
    "409": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        456
      ],
      "op": "AND",
      "path": "0"
    },
    "410": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        456
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "411": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        456
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "416": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        456
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "419": {
      "op": "ADD"
    },
    "420": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "422": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "424": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "425": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP1",
      "path": "0"
    },
    "426": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP4",
      "path": "0"
    },
    "427": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "SUB",
      "path": "0"
    },
    "428": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "429": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "431": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP8",
      "path": "0"
    },
    "432": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "GAS",
      "path": "0"
    },
    "433": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "CALL",
      "path": "0"
    },
    "434": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "435": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP1",
      "path": "0"
    },
    "436": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "437": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C2"
    },
    "440": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "441": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "442": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "444": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP1",
      "path": "0"
    },
    "445": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "446": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "447": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "449": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "REVERT",
      "path": "0"
    },
    "450": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "451": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "POP",
      "path": "0"
    },
    "452": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "POP",
      "path": "0"
    },
    "453": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "POP",
      "path": "0"
    },
    "454": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "POP",
      "path": "0"
    },
    "455": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "457": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "458": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "459": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "461": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "NOT",
      "path": "0"
    },
    "462": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "464": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP3",
      "path": "0"
    },
    "465": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "ADD",
      "path": "0"
    },
    "466": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "AND",
      "path": "0"
    },
    "467": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP3",
      "path": "0"
    },
    "468": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "ADD",
      "path": "0"
    },
    "469": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP1",
      "path": "0"
    },
    "470": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "472": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "473": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "POP",
      "path": "0"
    },
    "474": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "DUP2",
      "path": "0"
    },
    "475": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "ADD",
      "path": "0"
    },
    "476": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "477": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "480": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "481": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "482": {
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B5"
    },
    "485": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        438,
        490
      ],
      "op": "JUMP",
      "path": "0"
    },
    "486": {
      "branch": 9,
      "fn": "Disperse.disperseToken",
      "offset": [
        438,
        490
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "Disperse.disperseToken",
      "offset": [
        430,
        491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "490": {
      "branch": 9,
      "fn": "Disperse.disperseToken",
      "offset": [
        430,
        491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "491": {
      "fn": "Disperse.disperseToken",
      "offset": [
        430,
        491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "493": {
      "fn": "Disperse.disperseToken",
      "offset": [
        430,
        491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "494": {
      "fn": "Disperse.disperseToken",
      "offset": [
        430,
        491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "495": {
      "fn": "Disperse.disperseToken",
      "offset": [
        430,
        491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "Disperse.disperseToken",
      "offset": [
        507,
        516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "498": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "499": {
      "fn": "Disperse.disperseToken",
      "offset": [
        522,
        543
      ],
      "op": "DUP6",
      "path": "0"
    },
    "500": {
      "fn": "Disperse.disperseToken",
      "offset": [
        522,
        543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "501": {
      "fn": "Disperse.disperseToken",
      "offset": [
        522,
        543
      ],
      "op": "LT",
      "path": "0"
    },
    "502": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "503": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CD"
    },
    "506": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "507": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        569
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 6
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        578
      ],
      "op": "AND",
      "path": "0"
    },
    "517": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        578
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "522": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        589
      ],
      "op": "DUP9",
      "path": "0"
    },
    "523": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        589
      ],
      "op": "DUP9",
      "path": "0"
    },
    "524": {
      "fn": "Disperse.disperseToken",
      "offset": [
        590,
        591
      ],
      "op": "DUP5",
      "path": "0"
    },
    "525": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "526": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "527": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "LT",
      "path": "0"
    },
    "528": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "531": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "532": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "535": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "538": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        579,
        592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "541": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "POP",
      "path": "0"
    },
    "542": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "544": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "MUL",
      "path": "0"
    },
    "545": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "ADD",
      "path": "0"
    },
    "546": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "548": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "549": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "ADD",
      "path": "0"
    },
    "550": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "551": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230"
    },
    "554": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "555": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "556": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DE"
    },
    "559": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        579,
        592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "560": {
      "fn": "Disperse.disperseToken",
      "offset": [
        579,
        592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "561": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        600
      ],
      "op": "DUP8",
      "path": "0"
    },
    "562": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        600
      ],
      "op": "DUP8",
      "path": "0"
    },
    "563": {
      "fn": "Disperse.disperseToken",
      "offset": [
        601,
        602
      ],
      "op": "DUP6",
      "path": "0"
    },
    "564": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "DUP2",
      "path": "0"
    },
    "565": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "DUP2",
      "path": "0"
    },
    "566": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "LT",
      "path": "0"
    },
    "567": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "570": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "571": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "574": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "577": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        594,
        603
      ],
      "op": "JUMP",
      "path": "0"
    },
    "578": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "579": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "581": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "op": "SUB"
    },
    "590": {
      "op": "NOT"
    },
    "591": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "593": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP8",
      "path": "0"
    },
    "594": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "595": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "SHL",
      "path": "0"
    },
    "596": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "AND",
      "path": "0"
    },
    "597": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "598": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "op": "SUB"
    },
    "607": {
      "op": "SWAP1"
    },
    "608": {
      "op": "SWAP5"
    },
    "609": {
      "op": "AND"
    },
    "610": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "612": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP6",
      "path": "0"
    },
    "613": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "ADD",
      "path": "0"
    },
    "614": {
      "op": "MSTORE"
    },
    "615": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "617": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "MUL",
      "path": "0"
    },
    "618": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "619": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "620": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "621": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "ADD",
      "path": "0"
    },
    "622": {
      "fn": "Disperse.disperseToken",
      "offset": [
        594,
        603
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "625": {
      "op": "DUP4"
    },
    "626": {
      "op": "ADD"
    },
    "627": {
      "op": "MSTORE"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "634": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "636": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "637": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP1",
      "path": "0"
    },
    "638": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP4",
      "path": "0"
    },
    "639": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "SUB",
      "path": "0"
    },
    "640": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "641": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "643": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP8",
      "path": "0"
    },
    "644": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "GAS",
      "path": "0"
    },
    "645": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "CALL",
      "path": "0"
    },
    "646": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "647": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP1",
      "path": "0"
    },
    "648": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "649": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "652": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "653": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "654": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "656": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP1",
      "path": "0"
    },
    "657": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "658": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "659": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "661": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "REVERT",
      "path": "0"
    },
    "662": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "POP",
      "path": "0"
    },
    "664": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "POP",
      "path": "0"
    },
    "665": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "POP",
      "path": "0"
    },
    "666": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "POP",
      "path": "0"
    },
    "667": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "669": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "670": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "671": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "673": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "NOT",
      "path": "0"
    },
    "674": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "676": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "677": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "ADD",
      "path": "0"
    },
    "678": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "AND",
      "path": "0"
    },
    "679": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "680": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "ADD",
      "path": "0"
    },
    "681": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP1",
      "path": "0"
    },
    "682": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "684": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "685": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "POP",
      "path": "0"
    },
    "686": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "687": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "ADD",
      "path": "0"
    },
    "688": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "689": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BA"
    },
    "692": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "693": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "694": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B5"
    },
    "697": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        564,
        604
      ],
      "op": "JUMP",
      "path": "0"
    },
    "698": {
      "fn": "Disperse.disperseToken",
      "offset": [
        564,
        604
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "699": {
      "op": "POP"
    },
    "700": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 7
    },
    "701": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C5"
    },
    "704": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "705": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x582"
    },
    "708": {
      "fn": "Disperse.disperseToken",
      "jump": "i",
      "offset": [
        545,
        548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "709": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "710": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "711": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "POP",
      "path": "0"
    },
    "712": {
      "fn": "Disperse.disperseToken",
      "offset": [
        545,
        548
      ],
      "op": "POP",
      "path": "0"
    },
    "713": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "716": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "717": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "718": {
      "fn": "Disperse.disperseToken",
      "offset": [
        502,
        615
      ],
      "op": "POP",
      "path": "0"
    },
    "719": {
      "fn": "Disperse.disperseToken",
      "offset": [
        271,
        621
      ],
      "op": "POP",
      "path": "0"
    },
    "720": {
      "fn": "Disperse.disperseToken",
      "offset": [
        271,
        621
      ],
      "op": "POP",
      "path": "0"
    },
    "721": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "POP",
      "path": "0"
    },
    "722": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "POP",
      "path": "0"
    },
    "723": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "POP",
      "path": "0"
    },
    "724": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "POP",
      "path": "0"
    },
    "725": {
      "fn": "Disperse.disperseToken",
      "offset": [
        122,
        621
      ],
      "op": "POP",
      "path": "0"
    },
    "726": {
      "fn": "Disperse.disperseToken",
      "jump": "o",
      "offset": [
        122,
        621
      ],
      "op": "JUMP",
      "path": "0"
    },
    "727": {
      "op": "JUMPDEST"
    },
    "728": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "748": {
      "op": "REVERT"
    },
    "749": {
      "op": "JUMPDEST"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "752": {
      "op": "MLOAD"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "755": {
      "op": "DUP3"
    },
    "756": {
      "op": "ADD"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "759": {
      "op": "NOT"
    },
    "760": {
      "op": "AND"
    },
    "761": {
      "op": "DUP2"
    },
    "762": {
      "op": "ADD"
    },
    "763": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "772": {
      "op": "DUP2"
    },
    "773": {
      "op": "GT"
    },
    "774": {
      "op": "DUP3"
    },
    "775": {
      "op": "DUP3"
    },
    "776": {
      "op": "LT"
    },
    "777": {
      "op": "OR"
    },
    "778": {
      "op": "ISZERO"
    },
    "779": {
      "op": "PUSH2",
      "value": "0x316"
    },
    "782": {
      "op": "JUMPI"
    },
    "783": {
      "op": "PUSH2",
      "value": "0x316"
    },
    "786": {
      "op": "PUSH2",
      "value": "0x2D7"
    },
    "789": {
      "jump": "i",
      "op": "JUMP"
    },
    "790": {
      "op": "JUMPDEST"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "793": {
      "op": "MSTORE"
    },
    "794": {
      "op": "SWAP2"
    },
    "795": {
      "op": "SWAP1"
    },
    "796": {
      "op": "POP"
    },
    "797": {
      "jump": "o",
      "op": "JUMP"
    },
    "798": {
      "op": "JUMPDEST"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "801": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "810": {
      "op": "DUP3"
    },
    "811": {
      "op": "GT"
    },
    "812": {
      "op": "ISZERO"
    },
    "813": {
      "op": "PUSH2",
      "value": "0x338"
    },
    "816": {
      "op": "JUMPI"
    },
    "817": {
      "op": "PUSH2",
      "value": "0x338"
    },
    "820": {
      "op": "PUSH2",
      "value": "0x2D7"
    },
    "823": {
      "jump": "i",
      "op": "JUMP"
    },
    "824": {
      "op": "JUMPDEST"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "op": "SWAP1"
    },
    "833": {
      "jump": "o",
      "op": "JUMP"
    },
    "834": {
      "op": "JUMPDEST"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "op": "DUP2"
    },
    "844": {
      "op": "AND"
    },
    "845": {
      "op": "DUP2"
    },
    "846": {
      "op": "EQ"
    },
    "847": {
      "op": "PUSH2",
      "value": "0x357"
    },
    "850": {
      "op": "JUMPI"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "853": {
      "op": "DUP1"
    },
    "854": {
      "op": "REVERT"
    },
    "855": {
      "op": "JUMPDEST"
    },
    "856": {
      "op": "POP"
    },
    "857": {
      "jump": "o",
      "op": "JUMP"
    },
    "858": {
      "op": "JUMPDEST"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "861": {
      "op": "DUP3"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "864": {
      "op": "DUP4"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "SLT"
    },
    "867": {
      "op": "PUSH2",
      "value": "0x36B"
    },
    "870": {
      "op": "JUMPI"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "873": {
      "op": "DUP1"
    },
    "874": {
      "op": "REVERT"
    },
    "875": {
      "op": "JUMPDEST"
    },
    "876": {
      "op": "DUP2"
    },
    "877": {
      "op": "CALLDATALOAD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "880": {
      "op": "PUSH2",
      "value": "0x380"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "886": {
      "op": "DUP4"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x31E"
    },
    "890": {
      "jump": "i",
      "op": "JUMP"
    },
    "891": {
      "op": "JUMPDEST"
    },
    "892": {
      "op": "PUSH2",
      "value": "0x2ED"
    },
    "895": {
      "jump": "i",
      "op": "JUMP"
    },
    "896": {
      "op": "JUMPDEST"
    },
    "897": {
      "op": "DUP3"
    },
    "898": {
      "op": "DUP2"
    },
    "899": {
      "op": "MSTORE"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "902": {
      "op": "SWAP3"
    },
    "903": {
      "op": "SWAP1"
    },
    "904": {
      "op": "SWAP3"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "DUP5"
    },
    "907": {
      "op": "ADD"
    },
    "908": {
      "op": "DUP2"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "op": "SWAP2"
    },
    "911": {
      "op": "DUP2"
    },
    "912": {
      "op": "DUP2"
    },
    "913": {
      "op": "ADD"
    },
    "914": {
      "op": "SWAP1"
    },
    "915": {
      "op": "DUP7"
    },
    "916": {
      "op": "DUP5"
    },
    "917": {
      "op": "GT"
    },
    "918": {
      "op": "ISZERO"
    },
    "919": {
      "op": "PUSH2",
      "value": "0x39F"
    },
    "922": {
      "op": "JUMPI"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "925": {
      "op": "DUP1"
    },
    "926": {
      "op": "REVERT"
    },
    "927": {
      "op": "JUMPDEST"
    },
    "928": {
      "op": "DUP3"
    },
    "929": {
      "op": "DUP7"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "JUMPDEST"
    },
    "932": {
      "op": "DUP5"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "LT"
    },
    "935": {
      "op": "ISZERO"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x3BA"
    },
    "939": {
      "op": "JUMPI"
    },
    "940": {
      "op": "DUP1"
    },
    "941": {
      "op": "CALLDATALOAD"
    },
    "942": {
      "op": "DUP4"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "SWAP2"
    },
    "945": {
      "op": "DUP4"
    },
    "946": {
      "op": "ADD"
    },
    "947": {
      "op": "SWAP2"
    },
    "948": {
      "op": "DUP4"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "op": "PUSH2",
      "value": "0x3A3"
    },
    "953": {
      "op": "JUMP"
    },
    "954": {
      "op": "JUMPDEST"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "op": "SWAP7"
    },
    "957": {
      "op": "SWAP6"
    },
    "958": {
      "op": "POP"
    },
    "959": {
      "op": "POP"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "op": "POP"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "jump": "o",
      "op": "JUMP"
    },
    "965": {
      "op": "JUMPDEST"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "968": {
      "op": "DUP1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "971": {
      "op": "DUP4"
    },
    "972": {
      "op": "DUP6"
    },
    "973": {
      "op": "SUB"
    },
    "974": {
      "op": "SLT"
    },
    "975": {
      "op": "ISZERO"
    },
    "976": {
      "op": "PUSH2",
      "value": "0x3D8"
    },
    "979": {
      "op": "JUMPI"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "982": {
      "op": "DUP1"
    },
    "983": {
      "op": "REVERT"
    },
    "984": {
      "op": "JUMPDEST"
    },
    "985": {
      "op": "DUP3"
    },
    "986": {
      "op": "CALLDATALOAD"
    },
    "987": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "996": {
      "op": "DUP1"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "GT"
    },
    "999": {
      "op": "ISZERO"
    },
    "1000": {
      "op": "PUSH2",
      "value": "0x3F0"
    },
    "1003": {
      "op": "JUMPI"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1006": {
      "op": "DUP1"
    },
    "1007": {
      "op": "REVERT"
    },
    "1008": {
      "op": "JUMPDEST"
    },
    "1009": {
      "op": "DUP2"
    },
    "1010": {
      "op": "DUP6"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "op": "SWAP2"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "op": "DUP6"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1017": {
      "op": "DUP4"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "op": "SLT"
    },
    "1020": {
      "op": "PUSH2",
      "value": "0x404"
    },
    "1023": {
      "op": "JUMPI"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1026": {
      "op": "DUP1"
    },
    "1027": {
      "op": "REVERT"
    },
    "1028": {
      "op": "JUMPDEST"
    },
    "1029": {
      "op": "DUP2"
    },
    "1030": {
      "op": "CALLDATALOAD"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x414"
    },
    "1036": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "1039": {
      "op": "DUP4"
    },
    "1040": {
      "op": "PUSH2",
      "value": "0x31E"
    },
    "1043": {
      "jump": "i",
      "op": "JUMP"
    },
    "1044": {
      "op": "JUMPDEST"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1050": {
      "op": "SWAP3"
    },
    "1051": {
      "op": "SWAP1"
    },
    "1052": {
      "op": "SWAP3"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "DUP5"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "DUP2"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "op": "SWAP2"
    },
    "1059": {
      "op": "DUP2"
    },
    "1060": {
      "op": "DUP2"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "SWAP1"
    },
    "1063": {
      "op": "DUP10"
    },
    "1064": {
      "op": "DUP5"
    },
    "1065": {
      "op": "GT"
    },
    "1066": {
      "op": "ISZERO"
    },
    "1067": {
      "op": "PUSH2",
      "value": "0x433"
    },
    "1070": {
      "op": "JUMPI"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1073": {
      "op": "DUP1"
    },
    "1074": {
      "op": "REVERT"
    },
    "1075": {
      "op": "JUMPDEST"
    },
    "1076": {
      "op": "SWAP5"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "SWAP5"
    },
    "1080": {
      "op": "JUMPDEST"
    },
    "1081": {
      "op": "DUP4"
    },
    "1082": {
      "op": "DUP7"
    },
    "1083": {
      "op": "LT"
    },
    "1084": {
      "op": "ISZERO"
    },
    "1085": {
      "op": "PUSH2",
      "value": "0x45A"
    },
    "1088": {
      "op": "JUMPI"
    },
    "1089": {
      "op": "DUP6"
    },
    "1090": {
      "op": "CALLDATALOAD"
    },
    "1091": {
      "op": "PUSH2",
      "value": "0x44B"
    },
    "1094": {
      "op": "DUP2"
    },
    "1095": {
      "op": "PUSH2",
      "value": "0x342"
    },
    "1098": {
      "jump": "i",
      "op": "JUMP"
    },
    "1099": {
      "op": "JUMPDEST"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "SWAP5"
    },
    "1103": {
      "op": "DUP3"
    },
    "1104": {
      "op": "ADD"
    },
    "1105": {
      "op": "SWAP5"
    },
    "1106": {
      "op": "SWAP1"
    },
    "1107": {
      "op": "DUP3"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "SWAP1"
    },
    "1110": {
      "op": "PUSH2",
      "value": "0x438"
    },
    "1113": {
      "op": "JUMP"
    },
    "1114": {
      "op": "JUMPDEST"
    },
    "1115": {
      "op": "SWAP7"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "op": "POP"
    },
    "1118": {
      "op": "DUP7"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "CALLDATALOAD"
    },
    "1121": {
      "op": "SWAP3"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "op": "DUP1"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "GT"
    },
    "1127": {
      "op": "ISZERO"
    },
    "1128": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1131": {
      "op": "JUMPI"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1134": {
      "op": "DUP1"
    },
    "1135": {
      "op": "REVERT"
    },
    "1136": {
      "op": "JUMPDEST"
    },
    "1137": {
      "op": "POP"
    },
    "1138": {
      "op": "PUSH2",
      "value": "0x47D"
    },
    "1141": {
      "op": "DUP6"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "DUP7"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "op": "PUSH2",
      "value": "0x35A"
    },
    "1148": {
      "jump": "i",
      "op": "JUMP"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "op": "SWAP2"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "op": "POP"
    },
    "1153": {
      "op": "SWAP3"
    },
    "1154": {
      "op": "POP"
    },
    "1155": {
      "op": "SWAP3"
    },
    "1156": {
      "op": "SWAP1"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "jump": "o",
      "op": "JUMP"
    },
    "1159": {
      "op": "JUMPDEST"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1162": {
      "op": "DUP1"
    },
    "1163": {
      "op": "DUP4"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1166": {
      "op": "DUP5"
    },
    "1167": {
      "op": "ADD"
    },
    "1168": {
      "op": "SLT"
    },
    "1169": {
      "op": "PUSH2",
      "value": "0x499"
    },
    "1172": {
      "op": "JUMPI"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1175": {
      "op": "DUP1"
    },
    "1176": {
      "op": "REVERT"
    },
    "1177": {
      "op": "JUMPDEST"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "op": "DUP2"
    },
    "1180": {
      "op": "CALLDATALOAD"
    },
    "1181": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1190": {
      "op": "DUP2"
    },
    "1191": {
      "op": "GT"
    },
    "1192": {
      "op": "ISZERO"
    },
    "1193": {
      "op": "PUSH2",
      "value": "0x4B1"
    },
    "1196": {
      "op": "JUMPI"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1199": {
      "op": "DUP1"
    },
    "1200": {
      "op": "REVERT"
    },
    "1201": {
      "op": "JUMPDEST"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1204": {
      "op": "DUP4"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "op": "SWAP2"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "op": "DUP4"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1211": {
      "op": "DUP3"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "op": "DUP6"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "ADD"
    },
    "1218": {
      "op": "GT"
    },
    "1219": {
      "op": "ISZERO"
    },
    "1220": {
      "op": "PUSH2",
      "value": "0x4CC"
    },
    "1223": {
      "op": "JUMPI"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1226": {
      "op": "DUP1"
    },
    "1227": {
      "op": "REVERT"
    },
    "1228": {
      "op": "JUMPDEST"
    },
    "1229": {
      "op": "SWAP3"
    },
    "1230": {
      "op": "POP"
    },
    "1231": {
      "op": "SWAP3"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "jump": "o",
      "op": "JUMP"
    },
    "1235": {
      "op": "JUMPDEST"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1238": {
      "op": "DUP1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1241": {
      "op": "DUP1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1246": {
      "op": "DUP7"
    },
    "1247": {
      "op": "DUP9"
    },
    "1248": {
      "op": "SUB"
    },
    "1249": {
      "op": "SLT"
    },
    "1250": {
      "op": "ISZERO"
    },
    "1251": {
      "op": "PUSH2",
      "value": "0x4EB"
    },
    "1254": {
      "op": "JUMPI"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1257": {
      "op": "DUP1"
    },
    "1258": {
      "op": "REVERT"
    },
    "1259": {
      "op": "JUMPDEST"
    },
    "1260": {
      "op": "DUP6"
    },
    "1261": {
      "op": "CALLDATALOAD"
    },
    "1262": {
      "op": "PUSH2",
      "value": "0x4F6"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "PUSH2",
      "value": "0x342"
    },
    "1269": {
      "jump": "i",
      "op": "JUMP"
    },
    "1270": {
      "op": "JUMPDEST"
    },
    "1271": {
      "op": "SWAP5"
    },
    "1272": {
      "op": "POP"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1275": {
      "op": "DUP7"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "op": "CALLDATALOAD"
    },
    "1278": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1287": {
      "op": "DUP1"
    },
    "1288": {
      "op": "DUP3"
    },
    "1289": {
      "op": "GT"
    },
    "1290": {
      "op": "ISZERO"
    },
    "1291": {
      "op": "PUSH2",
      "value": "0x513"
    },
    "1294": {
      "op": "JUMPI"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1297": {
      "op": "DUP1"
    },
    "1298": {
      "op": "REVERT"
    },
    "1299": {
      "op": "JUMPDEST"
    },
    "1300": {
      "op": "PUSH2",
      "value": "0x51F"
    },
    "1303": {
      "op": "DUP10"
    },
    "1304": {
      "op": "DUP4"
    },
    "1305": {
      "op": "DUP11"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "PUSH2",
      "value": "0x487"
    },
    "1310": {
      "jump": "i",
      "op": "JUMP"
    },
    "1311": {
      "op": "JUMPDEST"
    },
    "1312": {
      "op": "SWAP1"
    },
    "1313": {
      "op": "SWAP7"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "op": "SWAP5"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1319": {
      "op": "DUP9"
    },
    "1320": {
      "op": "ADD"
    },
    "1321": {
      "op": "CALLDATALOAD"
    },
    "1322": {
      "op": "SWAP2"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "op": "DUP1"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "GT"
    },
    "1327": {
      "op": "ISZERO"
    },
    "1328": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1331": {
      "op": "JUMPI"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1334": {
      "op": "DUP1"
    },
    "1335": {
      "op": "REVERT"
    },
    "1336": {
      "op": "JUMPDEST"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "op": "PUSH2",
      "value": "0x545"
    },
    "1341": {
      "op": "DUP9"
    },
    "1342": {
      "op": "DUP3"
    },
    "1343": {
      "op": "DUP10"
    },
    "1344": {
      "op": "ADD"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x487"
    },
    "1348": {
      "jump": "i",
      "op": "JUMP"
    },
    "1349": {
      "op": "JUMPDEST"
    },
    "1350": {
      "op": "SWAP7"
    },
    "1351": {
      "op": "SWAP10"
    },
    "1352": {
      "op": "SWAP6"
    },
    "1353": {
      "op": "SWAP9"
    },
    "1354": {
      "op": "POP"
    },
    "1355": {
      "op": "SWAP4"
    },
    "1356": {
      "op": "SWAP7"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "op": "SWAP3"
    },
    "1359": {
      "op": "SWAP5"
    },
    "1360": {
      "op": "SWAP4"
    },
    "1361": {
      "op": "SWAP3"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "op": "POP"
    },
    "1364": {
      "op": "POP"
    },
    "1365": {
      "jump": "o",
      "op": "JUMP"
    },
    "1366": {
      "op": "JUMPDEST"
    },
    "1367": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1377": {
      "op": "MSTORE"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1382": {
      "op": "MSTORE"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1387": {
      "op": "REVERT"
    },
    "1388": {
      "op": "JUMPDEST"
    },
    "1389": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1409": {
      "op": "REVERT"
    },
    "1410": {
      "op": "JUMPDEST"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1415": {
      "op": "NOT"
    },
    "1416": {
      "op": "DUP3"
    },
    "1417": {
      "op": "EQ"
    },
    "1418": {
      "op": "ISZERO"
    },
    "1419": {
      "op": "PUSH2",
      "value": "0x596"
    },
    "1422": {
      "op": "JUMPI"
    },
    "1423": {
      "op": "PUSH2",
      "value": "0x596"
    },
    "1426": {
      "op": "PUSH2",
      "value": "0x56C"
    },
    "1429": {
      "jump": "i",
      "op": "JUMP"
    },
    "1430": {
      "op": "JUMPDEST"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "op": "SWAP1"
    },
    "1436": {
      "jump": "o",
      "op": "JUMP"
    },
    "1437": {
      "op": "JUMPDEST"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1440": {
      "op": "DUP3"
    },
    "1441": {
      "op": "NOT"
    },
    "1442": {
      "op": "DUP3"
    },
    "1443": {
      "op": "GT"
    },
    "1444": {
      "op": "ISZERO"
    },
    "1445": {
      "op": "PUSH2",
      "value": "0x5B0"
    },
    "1448": {
      "op": "JUMPI"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x5B0"
    },
    "1452": {
      "op": "PUSH2",
      "value": "0x56C"
    },
    "1455": {
      "jump": "i",
      "op": "JUMP"
    },
    "1456": {
      "op": "JUMPDEST"
    },
    "1457": {
      "op": "POP"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "SWAP1"
    },
    "1460": {
      "jump": "o",
      "op": "JUMP"
    },
    "1461": {
      "op": "JUMPDEST"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1466": {
      "op": "DUP3"
    },
    "1467": {
      "op": "DUP5"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "op": "SLT"
    },
    "1470": {
      "op": "ISZERO"
    },
    "1471": {
      "op": "PUSH2",
      "value": "0x5C7"
    },
    "1474": {
      "op": "JUMPI"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1477": {
      "op": "DUP1"
    },
    "1478": {
      "op": "REVERT"
    },
    "1479": {
      "op": "JUMPDEST"
    },
    "1480": {
      "op": "DUP2"
    },
    "1481": {
      "op": "MLOAD"
    },
    "1482": {
      "op": "DUP1"
    },
    "1483": {
      "op": "ISZERO"
    },
    "1484": {
      "op": "ISZERO"
    },
    "1485": {
      "op": "DUP2"
    },
    "1486": {
      "op": "EQ"
    },
    "1487": {
      "op": "PUSH2",
      "value": "0x5D7"
    },
    "1490": {
      "op": "JUMPI"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "op": "DUP1"
    },
    "1494": {
      "op": "REVERT"
    },
    "1495": {
      "op": "JUMPDEST"
    },
    "1496": {
      "op": "SWAP4"
    },
    "1497": {
      "op": "SWAP3"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "op": "POP"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "jump": "o",
      "op": "JUMP"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "DUP5"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "op": "SLT"
    },
    "1511": {
      "op": "ISZERO"
    },
    "1512": {
      "op": "PUSH2",
      "value": "0x5F0"
    },
    "1515": {
      "op": "JUMPI"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1518": {
      "op": "DUP1"
    },
    "1519": {
      "op": "REVERT"
    },
    "1520": {
      "op": "JUMPDEST"
    },
    "1521": {
      "op": "DUP2"
    },
    "1522": {
      "op": "CALLDATALOAD"
    },
    "1523": {
      "op": "PUSH2",
      "value": "0x5D7"
    },
    "1526": {
      "op": "DUP2"
    },
    "1527": {
      "op": "PUSH2",
      "value": "0x342"
    },
    "1530": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "36c638608b45f400491deb4dde2e949994b3b911",
  "source": "//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IERC20.sol\";\n\ncontract Disperse {\n    function disperseToken(\n        IERC20 tokenAddress,\n        address payable[] calldata recipients,\n        uint256[] calldata values\n    ) external {\n        IERC20 token = IERC20(tokenAddress);\n        uint256 total = 0;\n        for (uint256 i = 0; i < recipients.length; i++) total += values[i];\n\n        require(token.transferFrom(msg.sender, address(this), total));\n\n        for (uint256 i = 0; i < recipients.length; i++) {\n            token.transfer(recipients[i], values[i]);\n        }\n    }\n\n    function disperseNEON(address[] memory recipients, uint256[] memory values)\n        external\n        payable\n    {\n        for (uint256 i = 0; i < recipients.length; i++)\n            payable(recipients[i]).transfer(values[i]);\n        uint256 balance = address(this).balance;\n        // Refund remaining amount to msg.sender\n        if (balance > 0) payable(msg.sender).transfer(balance);\n    }\n}\n",
  "sourceMap": "98:925:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Disperse.sol",
  "type": "contract"
}